# Stage 1: Install ALL dependencies (needed for build)
FROM oven/bun:1.2.15-alpine AS deps
WORKDIR /home/app
COPY package.json bun.lock turbo.json ./
COPY apps/front-end/package.json ./apps/front-end/
COPY packages/prisma-store/package.json ./packages/prisma-store/
COPY packages/typescript-config/package.json ./packages/typescript-config/
COPY packages/eslint-config/package.json ./packages/eslint-config/

RUN bun install

# Stage 2: Build stage
FROM oven/bun:1.2.15-alpine AS builder
WORKDIR /home/app
RUN apk add --no-cache git libc6-compat

COPY --from=deps /home/app/node_modules ./node_modules
COPY --from=deps /home/app/package.json ./package.json
COPY --from=deps /home/app/turbo.json ./turbo.json
COPY --from=deps /home/app/bun.lock ./bun.lock

# Copy source code
COPY packages ./packages
COPY apps/front-end ./apps/front-end

# Generate Prisma client
RUN bunx prisma generate --schema=./packages/prisma-store/prisma/schema.prisma

# Build arguments for compilation (not secrets)
ARG BUILD_DATABASE_URL="postgresql://dummy:dummy@localhost:5432/dummy"
ARG BUILD_NEXTAUTH_URL="https://localhost:3000"
ARG BUILD_NEXTAUTH_SECRET="dummy-auth-value-for-build"
ARG BUILD_GOOGLE_CLIENT_ID="dummy-google-client-id"
ARG BUILD_GOOGLE_CLIENT_SECRET="dummy-google-client-value"
ARG BUILD_GITHUB_CLIENT_ID="dummy-github-client-id"
ARG BUILD_GITHUB_CLIENT_SECRET="dummy-github-client-value"
ARG BUILD_RESEND_API_KEY="dummy-resend-value"
ARG BUILD_EMAIL_FROM="noreply@example.com"

# Build Next.js with build arguments
RUN DATABASE_URL="$BUILD_DATABASE_URL" \
    NEXTAUTH_URL="$BUILD_NEXTAUTH_URL" \
    NEXTAUTH_SECRET="$BUILD_NEXTAUTH_SECRET" \
    GOOGLE_CLIENT_ID="$BUILD_GOOGLE_CLIENT_ID" \
    GOOGLE_CLIENT_SECRET="$BUILD_GOOGLE_CLIENT_SECRET" \
    GITHUB_CLIENT_ID="$BUILD_GITHUB_CLIENT_ID" \
    GITHUB_CLIENT_SECRET="$BUILD_GITHUB_CLIENT_SECRET" \
    RESEND_API_KEY="$BUILD_RESEND_API_KEY" \
    EMAIL_FROM="$BUILD_EMAIL_FROM" \
    NODE_ENV=production \
    NEXT_TELEMETRY_DISABLED=1 \
    bun --cwd apps/front-end run build


# Stage 3: Production Runtime (OPTIMIZED)
FROM oven/bun:1.2.15-alpine AS runner
WORKDIR /home/app

RUN apk add --no-cache git libc6-compat && \
    addgroup --system --gid 1001 deployflow && \
    adduser --system --uid 1001 --ingroup deployflow appUser

# Copy only Next.js build output and essential files (using standalone build)
COPY --from=builder --chown=appUser:deployflow /home/app/apps/front-end/.next/standalone ./
COPY --from=builder --chown=appUser:deployflow /home/app/apps/front-end/.next/static ./apps/front-end/.next/static

# Create public directory (standalone build expects it even if empty)
RUN mkdir -p ./apps/front-end/public
COPY --from=builder --chown=appUser:deployflow /home/app/apps/front-end/public ./apps/front-end/public

USER appUser

# Environment
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

EXPOSE 3000

# Run Next.js standalone server
CMD ["node", "apps/front-end/server.js"]
